services:
  users_service:
    build:
      context: ./microservices
      dockerfile: users_service/Dockerfile
    ports:
      - "${USERS_PORT:-8000}:8000"
    depends_on:
      - redis
    volumes:
      - ./microservices:/app
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - MYSQL_SSL_MODE=REQUIRED

  customer_service:
    build:
      context: ./microservices
      dockerfile: customer_service/Dockerfile
    ports:
      - "8002:8000"
    depends_on:
      - redis
      - users_service
    volumes:
      - ./microservices:/app
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - PYTHONPATH=/app

  redis:
    image: redis:latest
    command: redis-server --requirepass 123456789
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  adminer:
    image: adminer:4.8.1
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db1832025-hb-fd17.e.aivencloud.com:18336
      - ADMINER_DESIGN=flat
      - ADMINER_DRIVER=mysql
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  redis_data:


networks:
  app-network:
    driver: bridge
